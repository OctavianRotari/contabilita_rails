continue
vat
params
quit
continue
total_taxable
quit
total_taxable
continue
continue]
continue
total
continue
params_for_payment[:paid].empty?
params_for_payment[:paid]
params_for_payment.paid
params_for_payment
continue
params = params.require(:invoice).permit(:paid,:payment_date,:method_of_payment)
params.paid
params
continue
page.body
continue
page.body
page.body.href
page.body.a
page.body.find(css:'Bezzi')
continue
page.body
continue
page.body
continue
Company.all
page.body
continue
Company.all
continue
company('Bezzi')
continue
company('Bezzi')
company
continue
invoice_params.require(:invoice).permit(:paid)
quit
invoice_params
continue
company.id
invoice.id
invoice_params
continue
invoice.id
invoice.payments.build({total:'100', method_of_payment:'cassa', date:'05/03/15'}).save
invoice.payments.build({total:'100', method_of_payment:'cassa', date:'05/03/15'})
invoice.payments.build({total:100, method_of_payment:'cassa', date:'05/03/15'})
invoice =  Invoice.find(2)
Invoice.find(2)
Invoice.last
id
invoice_id
invoice_new.save
invoice_id
Invoice.payments.build({total:100, method_of_payment:'cassa', date:'05/03/15'})
Invoice.payments
invoice
invoice_params
Invoice.payments.build({total:100, method_of_payment:'cassa', date:'05/03/15'})
Invoice.payments.build({total:100, method_of_payment:'cassa, date:'05/03/15})
continue
@invoice_params
continue
@invoice_params
continue
@invoice_params
continue
@invoice_params
continue
@invoice_params
continue
@invoice_params
continue
@invoice_params
continue
@invoice_params
continue
@invoice_params
continue
total_taxable
continue
@taxable
total_taxable
continue
@taxable
@taxable.total_taxable
@taxable.new @invoice_params
@taxable.new
@taxable
@invoice_params
total_taxable
totak_taxable
continue
fg
total_taxable
continue
@invoice_params
total_vat
continue
total_vat
continue
total_vat
continue
total_vat
continue
total_vat
continue
total_vat
continue
total_vat
continue
build_invoice_1
continue
build_invoice_1
quit
build_invoice_1
continue
invoice_params_2
build_invoice_2
continue
build_invoice_2
continue
build_invoice_2.vat
build_invoice_2
continue
invoice_params_1.has_key?(:vat_1)
invoice_params_1.has_key?("vat_1")
continue
build_invoice_1.vat
build_invoice_1
continue
build_invoice_1
build_invoice
continue
continu
continue
@invoice_params.has_key?("vat_1")
@invoice_params.has_key?("vat_")
@invoice_params.has_key?("vat")
@invoice_params.has_key?("vat_*")
@invoice_params.has_key?("vat_"*)
quit
continue
invoice
continue
total
@invoice_params
continue
@invoice_params
continue
@invoice_params
continue
@invoice_params
vat
continue
total
continue
invoice_params[:taxable].to_f
invoice_params[:taxable].to_i
invoice_params[:taxable]
taxable
invoice_params
continue
invoice_params
continue
invoice_params
continue
invoice_params
continue
invoice_params
continue
fg
invoice_params
continue
@invoice_params
total
continue
fg
params
continue
page
continue
css
partial
rendered
render
puts page
page
page.partial
page
continue
params
continue
params
quit
params
continue
invoice
continue
invoice.params
invoice
continue
@invoice_params
company
continue
quit
fg
add_invoice_to_company
calculate_total
continue
invoice_params
continue
quit
fg
invoice
quit
invoice_params
continue
invoice_params
quit
invoice_params
quit
Invoice.new invoice_params
invoice_params
quit
@invoice_params
invoice_params
@invoice_params
@invoice_paraams
continue
fg
invoice_params
continue
invoice_params
continue
invoice_params
continue
invoice_params
quit
fg
invoice_params
quit
invoice_params.merge(total: vat + invoice_params[:taxable].to_i )
invoice_params
vat
continue
invoice_params.merge(total:305)
invoice_params
