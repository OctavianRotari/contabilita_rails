continue
continur
params.integer?
params = 2
m = 2
@invoice_params
@param
param
@params
quit
continu
current_url
page.body
continue
quit
continue
page.body
quit
fg
page.body
continue
page.body
quit
page.body
current_url
quit
current_url
page.body
quit
page.body
quit
fg
page.body
continue
page.body
continue
Invoice.all
continue
vehicle.passive_invoices
continue
vehicle.invoices.active
vehicle.invoices
vehicle.passive_invoices
continue
vehicle.passive_invoices
vehicle.invoices.passive
continue
vehicle.invoices.passive
vehicle.invoices.active
vehicle.passive_invoi
vehicle.invoices
vehicle
continuevehicle
continue
vehicle.invoices(1)
vehicle.passive_invoices
vehicle.invoices
vehicle.invocies
vehicle
continue
continu
Company.find(1)
Company.all
continue
continu
continue
Invoice.last
continue
conitnue
continue
Invoice.all
continue
page.body
continue
invoice.type_of_invoice
invoice
continue
create_passive_record('bezzi', 'ER859BS')
invoice
continue
@companies
@calculator
continue
params
continue
category_id
    Company.find(company_id).category_id
params[:category_id] = category_id
company_id
continue
company_id
invoice_params
paraams
params
continue
company_id
params[:category_id] = category_id
params[:category_id]
params
continue
category_id
continue
category_id
continue
category_id
category_if
continue
Company.find(company_id).category_of_company_id
company_id = params[:company_id]
params[:company_id]
company_id
params
continue
Invoice.current_year_passive_invoices
continue
contiue
Invoice.current_month_passive_invoices
continue
Invoice.current_month_passive_invoices
continue
Invoice.current_month_passive_invoices
continue
Invoice.current_month_passive_invoices
continue
Invoice.current_month_passive_invoices
continue
Invoice.current_month_passive_invoices
continue
Invoice.current_month_passive_invoices
Invoice.current_month_passive_invoice
continue
Invoice.where('date_of_issue.month' == '8')
Invoices.where('date_of_issue.month' == '8')
Invoices.all.where('date_of_issue.month' == '8')
continue
Invoices.all.where('date_of_issue.month' == '8')
Invoices.where('date_of_issue.month' == '8')
Invoices.where('date_of_issue.month' == 8)
continue
params
continue
Invoice.last.date_of_issue.month == Date.today.month
Invoice.last.date_of_issue.month
Invoice.lastdate_of_issue.month
date_of_issue.month
Date.today.month
passive.where('date_of_issue.month' === Date.today.month )
continue
company.invoices.current_year_passive_invoices
continue
invoice
continue
invoice
continue
invoice
continue
invoice
continue
invoice
continue
invoice
continue
invoice
continue
invoice
continue
invoice
puts invoice
continue
puts invoice
invocie
continue
Invoice.last.date_of_issue == Date.today.year
Invoice.last.date_of_issue.year == Date.today.year
Invoice.last.date_of_issue.year == Date.today.yer
Invoice.last.date_of_issue.year
Invoice.last.date_of_issue
Invoice.last
Invoice.last)
continue
company.invoices.current_year_passive_invoices do |invoice| puts invoice end
company.invoices.current_year_passive_invoices
company
continue
invoice.total.to_i
continue
invoice.total.to_i
continue
invoice.total.to_i
continue
invoice.total.to_i
invoice.total.float
invoice.total
invoice
invocie
continue
category.companies.each do |company| company.invoices.each do |invoice| puts invoice end end
category.companies.each do company.invoices.each do puts invoice end end
category.companies
category
category =  CategoryOfCompany.find(category)
continue
Category_of_company.all
category
category_id
category =  Category_of_company.find(category)
category =  Category.find(category)
continue
invoice.payments
invoice.paymetns
invoice
continue
invoices.first
invoice.total
invoice = invoices.first
invoices.each do |invoice| puts invoice end
invoices.each do |invoice| put invoice end
invoices.each do put invoice end
invoice.each do put invoice end
total_all_invoices(invoices)
invoices
continue
invoices
continue
companies.each do |company| puts company.invoices end
companies
companies.invoices
continue
contibue
puts companies
companies.each do |company| puts company.invoices end
companies.each do |company| company.invoices end
companies.invoices
companies
continue
Invoice.where('date_of_issue' == Date.today.month )
Invoice.where(date_of_issue == Date.today.month)
Invoice.last.date_of_issue.month
Invoice.last.date_of_issue
Invoice.last
Date.today.month
Date.today.moth
Date.today
date
fg
continue
@company_dashboard.not_collected_invoices
@company_dashboard.not_paid_invoices
continue
companies.each do |company| puts company.invoices.passive end
companies.each do |company| puts company.invoices.active end
companies.each do |company| puts company.invoices end
companies.invoices
companies
continue
company.invoices.passive.each do |invoice| puts invoice.total  end
