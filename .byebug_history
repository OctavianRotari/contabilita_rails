quit
params
quit
:q
insurance_create.id
insurance_create
insurance
continue
insurance_create.id
insurance_create
continue
quit
@vehicle.insurance.deadline
@vehicle.insurance
@vehicle
continue
quit
fg
Vehicle.joins({fuel_receipts: :company})
Vehicle.joins({fuel_receipts: :company}, {insurance: :company})
Vehicle.joins([{fuel_receipts: :company}, {insurance: :company}])
Vehicle.joins({fuel_receipts: :company}, {insurance: :company})
Vehicle.joins({fuel_receipts: :company})
puts Vehicle.joins({fuel_receipts: :company})
puts Vehicle.joins(fuel_receipts: :company)
puts Vehicle.joins(fuel_receipts: :companies)
puts Vehicle.joins(fuel_receipts: :company)
puts Vehicle.joins(fuel_receipts: :company).where(fuel_receipt_id: 1)
puts (Vehicle.joins(fuel_receipts: :company)).to_s
print Vehicle.joins(fuel_receipts: :company)
print_r Vehicle.joins(fuel_receipts: :company)
puts Vehicle.joins(fuel_receipts: :company)
puts Vehicle.joins(fuel_receipts: :company).where(company_id: '1')
puts Vehicle.joins(:fuel_receipts, companies).where(company_id: '1')
puts Vehicle.joins(:fuel_receipts, company).where(company_id: '1')
puts Vehicle.joins(:fuel_receipts, companies).where(company_id: '1')
puts Vehicle.joins(:fuel_receipts).where(company_id: '1')
Vehicle.joins(:fuel_receipts).where(company_id: '1')
Vehicle.joins(:fuel_receipts).where(company_id: 1)
Vehicle.joins(:fuel_receipts)
Vehicle.joins(:fuel_receipts, :insurance)
Vehicle.all
Vehicle.joins(:fuel_receipts, :insurance)
puts Vehicle.joins(:fuel_receipts, :insurance)
puts Vehicle.joins(:fuel_receipts, :insurances)
puts Vehicle.joins(:fuel_receipts, :insurance)
puts Vehicle.joins([fuel_receipts, insurance]).where(company: {id: self.id})
puts Vehicle.joins([fuel_receipts, insurances]).where(company: {id: self.id})
quit
puts Vehicle.joins([fuel_receipts, insurances]).where(company: {id: self.id})
puts Vehicle.joins([fuel_receipt, insurances]).where(company: {id: self.id})
puts Vehicle.joins([fuel_receiptss, insurances]).where(company: {id: self.id})
puts Vehicle.joins([fuel_receipts, insurances]).where(company: {id: self.id})
Vehicle.joins([fuel_receipts, insurances]).where(company: {id: self.id})
Vehicle.joins([fuel_receipts, insurances]).where(companies: {id: self.id})
Vehicle.joins([fuel_receipts, insurances])
Vehicle.joins([fuel_receipts, insurance])
Vehicle.joins([{fuel_receipts}, {insurance: :company}])
Vehicle.joins([{fuel_receipt: :company}, {insurance: :company}])
Vehicle.joins([{fuel_receipts: :company}, {insurance: :company}])
quit
Company.first.vehicles
Company.first
Company.all
quit
Company.vehicle
Company.vehicles
quit
Insurance.all
qui
Company.insurances.insurances
Company.insurances
continue
quit
Company.insurances
Companie.insurance
Insurance.all
continue
quit
Insurance.all
Insurances
continue
quit
Payment.find(1)
quit
insurance_params[:vehicle_id]
insurance_params
build_insurance.build
build_insurance
continue
quit
@insurance_params
insurance_params
continue
quit
Vehicle.all
quit
continue
Vehicle.all.count
create(:vehicle)
create(:user)
Vehicle.first
Vehicle.all
continue
create(:vehicle)
Vehicle.all
continue
quit
Vehicle.all
quit
Vehicle.all
quit
Vehicle.all
continue
quit
continue
insurance
invoice
quit
find_link(' Aggiungi contratto ')
find_link('Aggiungi contratto ')
find_link('Aggiungi contratto')
quit
insurance[:id]
insurance.id
insurance
quit
insurance_category.id
insurance_category
quit
current_user_companies
company_dashboard.company_name
company_dashboard.company
continue
quit
Invoice.passive
quit
continue
quit
continue
(total_costs_current_month(invoices) / number_of_vehicles).round(2).to_i
continue
(total_costs_current_month(invoices) / number_of_vehicles).round(2).to_i
continue
(total_costs_current_month(invoices) / number_of_vehicles).round(2).to_i
(total_costs_current_month(invoices) / number_of_vehicles).round(2)
number_of_vehicles
continue
quit
invoices.first.total.to_i
invoices.first.total
invoices.first
invoices
invoice
calculator.total_costs_current_month(invoices)
invoices
continue
quit
@invoices_dashboard.general_expences_invoices
quit
@invoices_dashboard.general_expence
@invoices_dashboard.general_expences
@invoices_dashboard
@invoice_dashboard
quit
@invoice_dashboard
quit
:q
invoice_dashboard
Invoice.last
page.body
page
continue
quit
current_user_invoices.where(at_the_expense_of: 'Spese generali').first.total.to_i
current_user_invoices.where(at_the_expense_of: 'Spese generali').first.total.to_y
current_user_invoices.where(at_the_expense_of: 'Spese generali').first.total
current_user_invoices.where(at_the_expense_of: 'Spese generali').first
current_user_invoices.where(at_the_expense_of: 'Spese generali')
Invoice.all
continue
quit
Invoice.all
Invoice.first
Invoice.last
current_user_invoices.where(at_the_expense_of: 'Spese generali')
quit
page.body
page
Invoice.where(at_the_expense_of: 'Spese generali')
Invoice.all
continue
quit
Vehicle.count
continue
quit
Vehicle.all
continue
quit
Vehicle.all
Vehicle.charge_general_expences
Vehicle.count
continue
quit
Invoice.not_collected.first.total.to_i
Invoice.not_collected.first.total
Invoice.not_collected.first.company_id
Invoice.not_collected.first.company_if
Invoice.not_collected.first
Invoice.not_collected
quit
page.body
quit
Invoice.not_paid.first.total_payments
Invoice.not_paid.total_payments
Invoice.not_paid.payments
Invoice.not_paid
Invoices.not_paid
quit
page.body
quit
page.body
page
Invoice.not_paid
Invoices.not_paid
invoices
quit
:q
page.body.find('td')
page.body
page
Invoice.all
quit
return "hello" if current_user_categories.gas_station
continue
return "hello" if current_user_categories.gas_station
puts "hello" if current_user_categories.gas_station
current_user_categories.gas_station
current_user_categories.gas_staation
current_user_categories
continue
Company.gas_stations.empty?
Company.gas_stations
Category.gas_station
Categpry.gas_station
quit
continue
total_to_pay
continue
total
invoice.total_payments
continue
invoice.total_payments
invoice
continue
invoice.total_payments
