quit
current_user_companies
company_dashboard.company_name
company_dashboard.company
continue
quit
Invoice.passive
quit
continue
quit
continue
(total_costs_current_month(invoices) / number_of_vehicles).round(2).to_i
continue
(total_costs_current_month(invoices) / number_of_vehicles).round(2).to_i
continue
(total_costs_current_month(invoices) / number_of_vehicles).round(2).to_i
(total_costs_current_month(invoices) / number_of_vehicles).round(2)
number_of_vehicles
continue
quit
invoices.first.total.to_i
invoices.first.total
invoices.first
invoices
invoice
calculator.total_costs_current_month(invoices)
invoices
continue
quit
@invoices_dashboard.general_expences_invoices
quit
@invoices_dashboard.general_expence
@invoices_dashboard.general_expences
@invoices_dashboard
@invoice_dashboard
quit
@invoice_dashboard
quit
:q
invoice_dashboard
Invoice.last
page.body
page
continue
quit
current_user_invoices.where(at_the_expense_of: 'Spese generali').first.total.to_i
current_user_invoices.where(at_the_expense_of: 'Spese generali').first.total.to_y
current_user_invoices.where(at_the_expense_of: 'Spese generali').first.total
current_user_invoices.where(at_the_expense_of: 'Spese generali').first
current_user_invoices.where(at_the_expense_of: 'Spese generali')
Invoice.all
continue
quit
Invoice.all
Invoice.first
Invoice.last
current_user_invoices.where(at_the_expense_of: 'Spese generali')
quit
page.body
page
Invoice.where(at_the_expense_of: 'Spese generali')
Invoice.all
continue
quit
Vehicle.count
continue
quit
Vehicle.all
continue
quit
Vehicle.all
Vehicle.charge_general_expences
Vehicle.count
continue
quit
Invoice.not_collected.first.total.to_i
Invoice.not_collected.first.total
Invoice.not_collected.first.company_id
Invoice.not_collected.first.company_if
Invoice.not_collected.first
Invoice.not_collected
quit
page.body
quit
Invoice.not_paid.first.total_payments
Invoice.not_paid.total_payments
Invoice.not_paid.payments
Invoice.not_paid
Invoices.not_paid
quit
page.body
quit
page.body
page
Invoice.not_paid
Invoices.not_paid
invoices
quit
:q
page.body.find('td')
page.body
page
Invoice.all
quit
return "hello" if current_user_categories.gas_station
continue
return "hello" if current_user_categories.gas_station
puts "hello" if current_user_categories.gas_station
current_user_categories.gas_station
current_user_categories.gas_staation
current_user_categories
continue
Company.gas_stations.empty?
Company.gas_stations
Category.gas_station
Categpry.gas_station
quit
continue
total_to_pay
continue
total
invoice.total_payments
continue
invoice.total_payments
invoice
continue
invoice.total_payments
continue
invoice.total_payments
invoice
continue
invoice_params
invoice_params[:taxable_vat_fields_attributes].keys.each do |field| vat(taxable_vat_fields[field]) end
invoice_params[:taxable_vat_fields_attributes].keys.each do |field| vat(taxable_vat_fields[field]) taxable(taxable_vat_fields[field]) end
invoice_params[:taxable_vat_fields_attributes].keys..each do |field| vat(taxable_vat_fields[field]) taxable(taxable_vat_fields[field]) end
invoice_params[:taxable_vat_fields_attributes].each do |field|
      end
        taxable(taxable_vat_fields[field])
invoice_params[:taxable_vat_fields_attributes]..each do |field|
invoice_params[:taxable_vat_fields_attributes].keys.each 
invoice_params[:taxable_vat_fields_attributes].keys
invoice_params[:taxable_vat_fields_attributes.keys
invoice_params[:taxable_vat_fields_attributes]
invoice_params
quit
Invoice.all
passive_invoice
Invoice.all
quit
Invoice.first
invoice.payments.first.paid.to_i
invoice.payments.first.paid
invoice.payments
invoice.paymetns
Payment.first.paid.to_i
Payment.first.paid
Payment.first.total
Payment.all
Payment
Payments
invoice.total.to_i
invoice
continue
@payment.save
Invoice.all
@invoice
@invoice.update(paid: payment_dashboard.check_total)
payment_dashboard.check_total
payment_dashboard
quit
total_to_pay.zero?
total_to_pay
continue
quit
fg
total_to_pay.zero? ?
total_to_pay.zero?
total_to_pay
continue
quit
total
invoice_total_payments
invoice.total.to_i
invoice.total
quit
payment_dashboard.check_total
continue
payment.errors
payment
continue
payment.errors
payment
continue
payment.errors
payment
continue
invoice.update(paid: true)
invoice
continue
invoice.total.to_i
invoice.total
invoice.total_payments.to_i
invoice.total_payments
invoice
continue
@invoice
@invoice.total_paid
@invoice.total_paid += 10
@invoice.total_paid.sum(10)
@invoice.total_paid
@invoice.update(total_paid: += 10)
@invoice.update(total_paid: 10)
@invoice
continue
@invoice.paid
@invocie.paid
continue
@invoice.paid
@invoice
@invocie
quit
invoice.paid
invoice = create(:invoice)
create(:invoice)
Invoice.find(payment[:invoice_id]).paid
Invoice.find(payment[:invoice_id])
Invoice.find(payment[:invoice_i]d)
Invoice.find(invoice_id)
@invoice.paid
@invoice
Invoice.first.paid
Invoice.first
Category.first.gas_station
Category.first
Category.gas_station
Category
quit
@invoice.paid
@invoice.reason
@invoice[:paid]
@invoice.paid
@invoice
@invocie
continue
continuie
@invoice
quit
@invoice.payed
@invoice.at_the_expense_of
@invoice.at_the_expence_of
@invoice.user_id
@invoice.id
@invoice.payed
@invoice
continue
quit
