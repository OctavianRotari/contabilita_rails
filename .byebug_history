continue
@params
params
continue
contiue
category.companies
category.company
category
continue
Vehicle.where(type_of_vehicle: 'Trattore' || 'trattore').count
Vehicle.allVehicle.where(type_of_vehicle: 'Trattore' || 'trattore').count
Vehicle.all
continue
content_tag(:h4, notice ) || content_tag(:h4, flash[:success] )
content_tag(:h4, notice )
content_tag(:h4, flash[:success] )
content_tag(:h4, flash[:success] ) || content_tag(:h4, flash[:notice])
notice.empty?
flash[:notice].empty?
flash[:notice].empty>
flash[:notice].exists?
notice?
notice ?
if notice
notice
flash
continue
fg
if Vehicle.all.empty return true
if Vehicle.all.empty 
Vehicle.all.count
Vehicle.all
Vehicle
Vehicles
record.vehicles
record
continue
conitnnue
continue
content_tag(:h4, flash[:error])
flash
continue
flash
continue
flash
continue
flash
continue
if flash return true end
if flash 
if flash true end
flash
if notice true '\n' 
if notice true '\n' end
if notice true \n end
if notice \n true \n end
if notice.exists? true end
if notice return true end;
if notice return true end
if notice true end
notice? true : false
if.notice
notice
continue
@invoice.type_of_invoice
@invoice
payments
payment
invoice
invoices
continue
Vehicle.count
continue
Invoice.all
Invoices.all
continue
@invoice_params[:vehicle_id].empty?
@invoice_params[:vehicle_id]
@invoice_params[:vehicle_id
continue
continur
params.integer?
params = 2
m = 2
@invoice_params
@param
param
@params
quit
continu
current_url
page.body
continue
quit
continue
page.body
quit
fg
page.body
continue
page.body
quit
page.body
current_url
quit
current_url
page.body
quit
page.body
quit
fg
page.body
continue
page.body
continue
Invoice.all
continue
vehicle.passive_invoices
continue
vehicle.invoices.active
vehicle.invoices
vehicle.passive_invoices
continue
vehicle.passive_invoices
vehicle.invoices.passive
continue
vehicle.invoices.passive
vehicle.invoices.active
vehicle.passive_invoi
vehicle.invoices
vehicle
continuevehicle
continue
vehicle.invoices(1)
vehicle.passive_invoices
vehicle.invoices
vehicle.invocies
vehicle
continue
continu
Company.find(1)
Company.all
continue
continu
continue
Invoice.last
continue
conitnue
continue
Invoice.all
continue
page.body
continue
invoice.type_of_invoice
invoice
continue
create_passive_record('bezzi', 'ER859BS')
invoice
continue
@companies
@calculator
continue
params
continue
category_id
    Company.find(company_id).category_id
params[:category_id] = category_id
company_id
continue
company_id
invoice_params
paraams
params
continue
company_id
params[:category_id] = category_id
params[:category_id]
params
continue
category_id
continue
category_id
continue
category_id
category_if
continue
Company.find(company_id).category_of_company_id
company_id = params[:company_id]
params[:company_id]
company_id
params
continue
Invoice.current_year_passive_invoices
continue
contiue
Invoice.current_month_passive_invoices
continue
Invoice.current_month_passive_invoices
continue
Invoice.current_month_passive_invoices
continue
Invoice.current_month_passive_invoices
continue
Invoice.current_month_passive_invoices
continue
Invoice.current_month_passive_invoices
continue
Invoice.current_month_passive_invoices
Invoice.current_month_passive_invoice
continue
Invoice.where('date_of_issue.month' == '8')
Invoices.where('date_of_issue.month' == '8')
Invoices.all.where('date_of_issue.month' == '8')
continue
Invoices.all.where('date_of_issue.month' == '8')
Invoices.where('date_of_issue.month' == '8')
Invoices.where('date_of_issue.month' == 8)
continue
params
continue
Invoice.last.date_of_issue.month == Date.today.month
Invoice.last.date_of_issue.month
Invoice.lastdate_of_issue.month
date_of_issue.month
Date.today.month
passive.where('date_of_issue.month' === Date.today.month )
continue
company.invoices.current_year_passive_invoices
continue
invoice
continue
invoice
continue
invoice
continue
invoice
continue
invoice
continue
invoice
continue
invoice
continue
invoice
continue
invoice
puts invoice
continue
puts invoice
invocie
continue
Invoice.last.date_of_issue == Date.today.year
Invoice.last.date_of_issue.year == Date.today.year
Invoice.last.date_of_issue.year == Date.today.yer
Invoice.last.date_of_issue.year
Invoice.last.date_of_issue
