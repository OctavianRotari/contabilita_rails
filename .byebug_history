continue
quit
puts fields_for
puts form.fields_for :vehicle_field
puts form.fields_for
form.fields_for
continue
vehicle_id
continue
params
continue
total_all(invoices).round(2).to_i
invoices = invoices.current_year_passive_invoices
invoices
continue
vehicles
total_all(invoices).round(2).to_i
total_all(invoices).round(2)
otal_all(invoices).round(2)
invoices
invoices = invoices.current_year_passive_invoices
invoices.current_year_passive_invoices.last.total.to_i
invoices.current_year_passive_invoices.last.total
invoices.current_year_passive_invoices.total
invoices.current_year_passive_invoices
invoices
continue
invoices
continue
invoices
continue
invoices
continue
invoices
continue
quit
continue
continnue
invoices
calculator.total_general_expenses_year(invoices).to_i
calculator.total_general_expenses_year(invoices)
calculator.total_general_expenses_month(invoices).to_i
continue
calculator.total_general_expenses_month(invoices).to_i
continue
calculator.total_general_expenses_month(invoices).to_i
calculator.total_general_expenses_month(invoices)
invoices
continue
Invoice.current_month_passive_invoices.first.total.to_i / Vehicle.all.count
continue
Invoice.current_year_passive_invoices.first.total.to_i / Vehicle.all.count
Invoice.current_year_passive_invoices.first.total.to_i
Invoice.current_year_passive_invoices.total.to_i
Invoice.current_year_passive_invoices
Invoice.current_year_passive
Invoice.all.count
Vehicle.all.count
invoices
(total_costs_current_month(invoices) / number_of_vehicles).round(2).to_i
continue
(total_costs_current_month(invoices) / number_of_vehicles).round(2).to_i
continue
(total_costs_current_month(invoices) / number_of_vehicles).round(2).to_i
(total_costs_current_month(invoices) / number_of_vehicles).round(2)
invoices
invoics
continue
(total_costs_current_month(invoices) / number_of_vehicles).round(2).to_i
continue
(total_costs_current_month(invoices) / number_of_vehicles).round(2).to_i
continue
(total_costs_current_month(invoices) / number_of_vehicles).round(2).to_i
continue
(total_costs_current_month(invoices) / number_of_vehicles).round(2).to_i
Invoice.current_month_passive_invoices
continue
(total_costs_current_month(invoices) / number_of_vehicles).round(2).to_i
Invoice.current_month_passive_invoices
quit
(total_costs_current_month(invoices) / number_of_vehicles).round(2).to_i
(total_costs_current_month(invoices) / number_of_vehicles).round(2)
total_costs_current_month(invoices) / number_of_vehicles).round(2)
quit
Invoice.all
Invoice.current_month_passive_invoices
quit
qut
Invoice.current_month_invoices
Invoice.all
Invoice.current_year_invoice
Invoice.current_year
Invoice
quit
continue
invoices.last[:date_of_issue] - 1.year
continue
invoices.last[:date_of_issue] - 1.year
continue
invoices.last[:date_of_issue] - 1.year
invoices.last[:date_of_issue]
quit
invoices.last
invoices.count
quit
(total_costs_current_year(invoices) / number_of_vehicles).round(2).to_i
(total_costs_current_year(invoices) / number_of_vehicles).round(2)
invoices.count
invoices.counr
number_of_vehicles
continue
quit
invoices.first.total.to_i
invoices.first.total
invoices.first
calculator.total_costs_current_month(invoices)
invoices
continue
Invoice.where(at_the_expense_of: 'general_expenses')
Invoices.where(at_the_expense_of: 'general_expenses')
Invoice.all
Invoice
Invoices
current_user_invoices.where(at_the_expense_of: 'general_expenses')
continue
current_user_invoices.where(at_the_expense_of: 'general_expenses')
continue
quit
continue
params
continue
params
continue
params
continue
params
oarams
continue
association
continue
association
form.object
continue
form.object
association
continue
association
form.object
continue
form.object
association
continue
form.object
continue
form.object
continue
form.object
continue
form.object
continue
form.object
continue
form.object
continue
form.object(vehicle_filed).klass.new
form.object(vehicle_filed)
form.object(vehicle_filed
vehicle_field
vehicle_fiels
vehicle
form
continue
quit
return 0 if records.empty?
records
continue
records
continue
records
continue
records
continue
records
continue
records
continue
records
continue
records
continue
records
return 0 if records.empty?
puts 0 if records.empty?
puts 'hell' if records.empty?
quit
return 'hell' if records.empty?
return 'hell' unless records
puts 'hell' unless records
records
continue
vehicle_id
continue
vehicle_id
at_the_expense_of
vehicle_id
insurance_params
continue
insurance_params
vehicle_id
continue
@insurance
continue
@insurance.destroy
@insurance.destry
@insurance
continue
quit
self
continue
self
vehicle
quit
continue
updated_invoice
continue
updated_invoice
update_invoice
invoice_params
continue
params
continue
params
continue
params
continue
params
continue
quit
updated_invoice
continue
updated_invoice
continue
updated_invoice
continue
updated_invoice
update_invoice
continue
quit
updated_invoice
update_invoice
invoice_params
continue
quit
invoice_params
invoice_params[:vehicle_id] = nil
@invoice_params
