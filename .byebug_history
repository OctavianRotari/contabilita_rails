continue
taxable_params
continue
taxable_params
continue
taxable_params
continue
taxable_params
continue
taxable_params
continue
taxable_vat_params.each{|tax| puts tax[1][:taxable]}
taxable_vat_params.each{|tax| puts tax[1]}
taxable_vat_params.each{|tax| puts tax[:taxable]}
taxable_vat_params.each{|tax| puts tax[1]}
taxable_vat_params.each{|tax| tax = tax[1], puts tax[:taxable]}
taxable_vat_params.each do |tax| tax = tax[1] puts tax[:taxable] end
taxable_vat_params.each do |tax| tax = tax[1], puts tax[:taxable] end
taxable_vat_params.each{|tax| tax = tax[1], puts tax[:taxable]}
taxable_vat_params.each{|tax| tax = tax[1] puts tax[:taxable]}
taxable_vat_params.each{|tax| tax = tax[1] tax[:taxable]}
taxable_vat_params.each{|tax| puts tax[1].taxable}
taxable_vat_params.each{|tax| puts tax[1]}
taxable_vat_params.each{|tax| puts tax[(uno).to_sym]}
uno = "1"
taxable_vat_params.each{|tax| puts tax[("1").to_sym]}
taxable_vat_params.each{|tax| puts tax["1"]}
taxable_vat_params.each{|tax| puts tax[:"1"]}
taxable_vat_params.each{|tax| puts tax[:1]}
taxable_vat_params.each{|tax| puts tax}
taxable_vat_params
continue
params[:taxable_vat_fields_attributes].count
params[:taxable_vat_fields_attributes]
taxable_vat_fields_attributes
params
continue
invoice_params
continue
invoice_params
continue
invoice_params
continue
invoice_params
continue
invoice_params
continue
f.label "ini"
f.label
f
continue
form.label 'Inponi'
form.label
form.labe
form
form.taxable_vat_fields 
form :taxable_vat_fields 
form.fields_for :taxable_vat_fields 
form.fields_for 
form.fields_for :taxable_vat_fields do |builder| puts builder end
form.fields_for :taxable_vat_fields do |builder|
continue
form
continue
respond_to
continue
respond_to
respond_to?
respond_to?(format)
respond_to?(js)
respond_to(js)
Format
format
respond_to
continue
request.url
url
continue
fg
page.body
page.boy
continue
Company.all
continue
company
continue
company
continue
company
continue
company
continue
continu
company
continue
Invoice.build(invoice_params, invoice.id)
invoice_params
continue
company_id
company
invoice.type_of_invoice
invoice
continue
Invoice.passive
Invoice.active
@invoices
invoices
continue
Invoice.active
Invoice.passive
Invoices.passive
continue
invoice.company
invoice.vehicle
invoice.vehicles
invoice.payments
invoice =Invoice.last
Invoice.all
quit
company.invoices
quit
company.invoices
company.invoices.vehicle
company.invoices.vehicles
vehicles
vehicle
quit
fg
vehicle
company.invoices.vehicles
company.invoices.vehicle
company.invoices
company
quit
company.invoices
company
quit
company
continue
company
company.id
quit
company.id
company
continue
company
quit
company_id
company.id
invoice
company
continue
total
Class
invoices
continue
@invoices
invoices
companies
companyas
@company
company
continue
@invoice
@invoices
@company
company
invoice
invoices
continue
fg
invoice.payments
invoice.paymetns
invoice =  invoices.first
continue
conitnue
continue
fg
continue
invoice.payments
invoice.payment
invoice.payments
invoice.paid
invoice =  invoices.first
invoices.first
invoices
quit
fg
page.body
continue
invoice.vehicle.plate
invoice
continue
page.body
quit
page.body
continue
page.body
continue
invoice.vehicle
invoice.vehivle
invoice
page.body
quit
page.body
Payment.all
invoice
fg
Vehicle.all
quit
invoice.vehicle.plate
invoice.vehicle.name
invoice.vehicle
invoice
invoic
continue
quit
invoice.vehicle
invoince
invoince.vehicle
company
invoice
page.body
continue
invoice.vehicle.plate
invoice.vehicle
invoice = Invoice.last
Invoice.last.company.plate
Company.all
Vehicle.all
Invoice.all
continue
invoice
invoice.parse(hash)
invoice.last
invoice
quit
fquit
Invoice.all
continue
vehicle
continue
vehicle
quit
company.create.invoices
company
continue
@invoice
continue
page.body
continue
invoice_params_builded
invoice_params
params.require(:invoice).permit(:reason,:taxable_1,:vat_1,:taxable_2,:vat_2,:taxable_3,:vat_3,:date_of_issue,:plate,:deadline)
invoice_params
invoice_paras
