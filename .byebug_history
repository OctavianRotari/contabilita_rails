continue
@invoice_params
continue
@invoice_params
continue
@invoice_params
continue
@invoice_params
continue
@invoice_params
continue
@invoice_params
continue
@invoice_params
continue
@invoice_params
continue
@invoice_params
continue
total_taxable
continue
@taxable
total_taxable
continue
@taxable
@taxable.total_taxable
@taxable.new @invoice_params
@taxable.new
@taxable
@invoice_params
total_taxable
totak_taxable
continue
fg
total_taxable
continue
@invoice_params
total_vat
continue
total_vat
continue
total_vat
continue
total_vat
continue
total_vat
continue
total_vat
continue
total_vat
continue
build_invoice_1
continue
build_invoice_1
quit
build_invoice_1
continue
invoice_params_2
build_invoice_2
continue
build_invoice_2
continue
build_invoice_2.vat
build_invoice_2
continue
invoice_params_1.has_key?(:vat_1)
invoice_params_1.has_key?("vat_1")
continue
build_invoice_1.vat
build_invoice_1
continue
build_invoice_1
build_invoice
continue
continu
continue
@invoice_params.has_key?("vat_1")
@invoice_params.has_key?("vat_")
@invoice_params.has_key?("vat")
@invoice_params.has_key?("vat_*")
@invoice_params.has_key?("vat_"*)
quit
continue
invoice
continue
total
@invoice_params
continue
@invoice_params
continue
@invoice_params
continue
@invoice_params
vat
continue
total
continue
invoice_params[:taxable].to_f
invoice_params[:taxable].to_i
invoice_params[:taxable]
taxable
invoice_params
continue
invoice_params
continue
invoice_params
continue
invoice_params
continue
invoice_params
continue
fg
invoice_params
continue
@invoice_params
total
continue
fg
params
continue
page
continue
css
partial
rendered
render
puts page
page
page.partial
page
continue
params
continue
params
quit
params
continue
invoice
continue
invoice.params
invoice
continue
@invoice_params
company
continue
quit
fg
add_invoice_to_company
calculate_total
continue
invoice_params
continue
quit
fg
invoice
quit
invoice_params
continue
invoice_params
quit
invoice_params
quit
Invoice.new invoice_params
invoice_params
quit
@invoice_params
invoice_params
@invoice_params
@invoice_paraams
continue
fg
invoice_params
continue
invoice_params
continue
invoice_params
continue
invoice_params
quit
fg
invoice_params
quit
invoice_params.merge(total: vat + invoice_params[:taxable].to_i )
invoice_params
vat
continue
invoice_params.merge(total:305)
invoice_params
invoice_params[:total] = 0
in
invoice_params_and_total
quit
invoice_params_and_total
invoice_params
quit
params.require(:invoice).permit(:taxable, :vat, :date, :plate, :deadline, :type_of_payment)
params.require(:company).permit(:name, :adress, :number)
continue
params.require(:company).permit(:name, :adress, :number)
continue
invoice_params
continue
invoice_params
continue
invoice_params
continue
invoice_params
quit
fg
Invoice.company.name
Invoice.company
Invoice
invoice
invoice_params
continue
fg
invoice_params
params
continue
Company.find(params[:company_id])
continue
params
continue
params
invoice
continue
continuye
continue
Company.invoices(1)
Company.invoices()
Company.invoices(1)
Company.create(name:'octav', adress:'maldive', number:'23331')
Company.all
Company.invoices(1)
Company.invoices(2)
Company.invoices(1)
Company.invoices
Company
continue
clients.invoices
clients =  ClientsAndSupplier.find(1)
clients.invoices
clients.invoice
clients.invoices
clients =  ClientsAndSupplier.where(id: 1)
ClientsAndSupplier.where(id: 1)
ClientsAndSupplier.where
ClientsAndSupplier
continue
params[:clients_and_supplier_id]
continue
params
continue
client.invoices.build(total:100, clients_and_supplier_id: 1)
client.invoices.build(total:100, clients_and_suppliers_id: 1)
client.invoices.build(total:100, clients_and_suppliers: 1)
